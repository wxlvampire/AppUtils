apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.wxlvampire'


repositories {
    jcenter()
    flatDir {
        dirs 'libs'
    }

}
buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
//		classpath 'com.android.tools.build:gradle:3.0.0'
		//classpath 'com.github.dcendents:android-maven-plugin:1.1'
		classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
	}
}
android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {
    //    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
//        compile 'com.jakewharton:butterknife:5.1.1'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    //    compile 'com.jakewharton:butterknife:8.4.0'
    //    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
}

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "utf-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
